name: Run Scripts

on:
  workflow_dispatch:
    inputs:
      run-now:
        description: 'Run scripts immediately'
        required: false
        default: 'false'

  schedule:
    - cron: '0 * * * *' # Schedule every hour

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo content
        uses: actions/checkout@v4 # checkout the repository content

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # install the Python version needed

      - name: Set up virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate 
      
      - name: Upgrade pip
        run: |
          pip install --upgrade pip

      - name: Install dependencies
        run: pip install requests-html numpy pandas yfinance

      - name: Use the PAT for authentication
        run: |
          # Use the PAT as an environment variable
          export PAT_TOKEN="${{ secrets.PAT_TOKEN }}"

      - name: Run insider_trading_data.py
        run: python insider_trading_data.py

      - name: Run Promoter_Pledge.py
        run: python Promoter_Pledge.py

      - name: Commit and push changes (if any)
        run: |
         git config --local user.email "actions@github.com"
         git config --local user.name "GitHub Actions"
         git add .
         git commit -m "Update data $(date -u +'%Y-%m-%d %H:%M:%S')"
         git push

      - name: Use PAT to commit and push changes
        run: |
          # Set the PAT as an environment variable
          export GITHUB_TOKEN=$PAT_TOKEN

          # GitHub credentials and repository information
          github_user="nikunjbaheti"
          repo_name="NSE-Insider-Trading"
          file_path="insider.csv"

          # GitHub API endpoints
          base_url="https://api.github.com/repos/$github_user/$repo_name"
          contents_url="$base_url/contents/$file_path"

          # Read the contents of the file
          file_content=$(base64 insider.csv)

          # Create a commit message
          commit_message="Update insider.csv"

          # Check if the file exists on the repository
          response=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: token $GITHUB_TOKEN" $contents_url)

          if [ $response -eq 200 ]; then
              # If the file exists, update it
              sha=$(curl -s -H "Authorization: token $GITHUB_TOKEN" $contents_url | jq -r .sha)
              payload="{\"message\": \"$commit_message\", \"content\": \"$file_content\", \"sha\": \"$sha\"}"
              curl -X PUT -H "Authorization: token $GITHUB_TOKEN" -d "$payload" $contents_url
          elif [ $response -eq 404 ]; then
              # If the file doesn't exist, create it
              payload="{\"message\": \"$commit_message\", \"content\": \"$file_content\"}"
              curl -X PUT -H "Authorization: token $GITHUB_TOKEN" -d "$payload" $contents_url
          else
              echo "Failed to check file existence. Status code: $response"
          fi
